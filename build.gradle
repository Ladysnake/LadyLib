buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}

allprojects {

    group = modGroup
    version = project.findProperty("${project.name}Version")

    apply plugin: "net.minecraftforge.gradle.forge"
    apply plugin: 'signing'

    sourceCompatibility = targetCompatibility = '1.8'


    minecraft {
        version = project.forgeVersion
        runDir = "run"
        replace '@VERSION@', project.version
        if (project.hasProperty('keyStore')) {
            replace '@FINGERPRINT@', project.findProperty('signSHA1')
        }

        mappings = project.mcpVersion
        makeObfSourceJar = false // Disable Srg named sources jar
    }

    apply from: new File(rootProject.projectDir, 'dependencies.gradle')
    apply from: new File(rootProject.projectDir, 'update_json.gradle')

    build.finalizedBy updateJson

    jar {
        from sourceSets.api.output
        from sourceSets.main.output
        manifest {
            attributes([
                    'Maven-Artifact': "${project.group}:${archivesBaseName}:${project.version}",
                    'Timestamp'     : System.currentTimeMillis()
            ])
        }
    }

    processResources {
        // this will ensure that this task is redone when the versions change.
        inputs.property "version", project.version
        inputs.property "mcversion", project.minecraft.version

        // replace stuff in mcmod.info, nothing else
        from(sourceSets.main.resources.srcDirs) {
            include "mcmod.info"

            // replace version and mcversion
            expand "version": project.version, "mcversion": project.minecraft.version
        }

        // copy everything else, that's not the mcmod.info
        from(sourceSets.main.resources.srcDirs) {
            exclude "mcmod.info"
        }

        rename '(.+_at.cfg)', 'META-INF/$1'
    }

    task signJar(type: SignJar, dependsOn: reobfJar) {
        onlyIf {
            project.hasProperty('keyStore')
        }

        keyStore = project.properties.keyStore
        alias = project.properties.keyStoreAlias
        storePass = project.properties.keyStorePass
        keyPass = project.properties.keyStoreKeyPass
    }

    build.dependsOn signJar
}

apply plugin: 'maven'

configurations {
    contained
    contained.transitive = false
}

jar {
    archiveName = "${archivesBaseName}-${mcVersion}-${project.version}.jar"
    manifest {
        attributes([
                'FMLAT': 'ladylib_at.cfg'
        ])
    }
}

sourceJar {
    archiveName = "${archivesBaseName}-${mcVersion}-${project.version}-${classifier}.jar"
}

signJar {
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

artifacts {
    archives(signJar.outputFile) {
        file signJar.outputFile
        type 'jar'
        builtBy signJar
    }
    archives (sourceJar) {
        type 'jar'
        builtBy sourceJar
        classifier 'sources'
    }
}

// configure subprojects
apply from: 'projects.gradle'
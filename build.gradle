buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}

apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: "net.minecraftforge.gradle.forge"

version = modVersion
group = modGroup
archivesBaseName = modBaseName

sourceCompatibility = 1.8

/* * * * LadyLib-specific integration * * * */
ext.ladylibJava = "./java"
ext.ladylibResources = "./resources"

sourceSets {
    main {
        java {
            srcDir project.ladylibJava
        }
        resources {
            srcDir project.ladylibResources
        }
    }
}

/* * * * * * * * * * * * * * * * * * * * * * */

minecraft {
    version = project.forgeVersion
    runDir = "run"

    if (canJarBeSigned()) {
        replace '@FINGERPRINT@', signSHA1
    }
    replace '@VERSION@', modVersion

    mappings = project.mcpVersion
}

repositories {
    mavenCentral()
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    deobfCompile "mezz.jei:jei_${mcVersion}:${jeiVersion}:api"
    runtime "mezz.jei:jei_${mcVersion}:${jeiVersion}"
}

jar {
    manifest {
        attributes([
                'Maven-Artifact': "${project.group}:${project.archivesBaseName}:${project.version}",
                'Timestamp'     : System.currentTimeMillis()
        ])
    }
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }

    inputFile = jar.archivePath
    outputFile = jar.archivePath

    keyStore = project.properties.keyStore
    alias = project.properties.keyStoreAlias
    storePass = project.properties.keyStorePass
    keyPass = project.properties.keyStoreKeyPass
}

artifacts {
    archives(signJar.outputFile) {
        file signJar.outputFile
        type 'jar'
        builtBy signJar
    }
    archives sourceJar
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}
